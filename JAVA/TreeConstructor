import java.util.*;

public class TreeConstructor {
    public static void main(String[] args) {
        System.out.print(TreeConstructor(new String[] {"(1,2)", "(2,4)", "(5,7)", "(7,2)", "(9,5)"}));
    }

    public static String TreeConstructor(String[] strArr) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i = 0; i < strArr.length; i++) {
            String str = strArr[i];
            int child = Integer.parseInt(str.substring(str.indexOf("(") + 1, str.indexOf(",")));
            int parent = Integer.parseInt(str.substring(str.indexOf(",") + 1, str.indexOf(")")));

            if(!map.containsKey(parent)) {
                map.put(parent, 1);
            } else {
                int newVal = map.get(parent);
                newVal++;
                map.replace(parent, newVal);
            }
        }

        Iterator<Map.Entry<Integer, Integer>> it = map.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry<Integer, Integer> set = it.next();
            if(set.getValue() > 2) {
                return "false";
            }
        }
        return "true";
    }
}
